{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Nagiosforcouchbase","google":"","tagline":"","body":"\r\nCouchbase Nagios Monitoring\r\n===========================\r\n\r\nWorkflow diagram\r\n======================\r\n\r\n![Monitoring Work Flow](images/workflow.png)\r\n\r\nDirectory layout\r\n======================\r\n\r\n````\r\n├── config\r\n│   ├── checks.yml\r\n│   ├── environment.rb\r\n│   └── environment.yml\r\n└── lib\r\n    ├── couchbase.rb\r\n    ├── extensions.rb\r\n    └── wizcorp\r\n        ├── couchbase\r\n        │   ├── bucket_stats.rb\r\n        │   ├── buckets.rb\r\n        │   ├── connection.rb\r\n        │   └── counters.rb\r\n        └── nagios\r\n            ├── api.rb\r\n            ├── checks.rb\r\n            └── runner.rb\r\n````\r\n\r\n\r\nConfiguration files\r\n====================\r\n\r\nAll configuration files are in `./config` directory.\r\n\r\n* `environment.rb` - Ruby code for loading necessary configurations\r\n* `environment.yml` - YAML configuration for Application environment: paths', hostnames, ports, etc.\r\n* `checks.yml` - Nagios service checks configuration.\r\n\r\n\r\nNagios checks configuration\r\n---------------------------\r\n\r\n### Description of the format\r\n\r\n\r\nFor clarification regarding format of the attributes, refer to defaults section. All configuration should adhere to the same syntax.\r\n\r\n#### Colons (:) \r\n\r\n\r\nAttributes should have colons at both ends(i.e. `:namespace:`, `:class:`) Trailing colon is left/right side separator in YAML syntax. Leading colon specifies that this is a Symbol in Ruby terms.\r\n\r\nValues for attributes `:function`, `:operator` also must have leading colons. These are Ruby method names, i.e. symbols.\r\n\r\n#### Override\r\n\r\nImport defaults by including `'<<: *default'`, see Example below.\r\n\r\nAny default attribute can be overriden. \r\n\r\n#### Attributes\r\n\r\n* key (for example `:ep_tap_replica_queue_backfillremaining:`) is a Ruby method name. In a class defined by `:namespace:`, `:class:` pair, must exist or should be provided by `method_missing` method.\r\n\r\n* `:namespace:` and `:class:` - Ruby module hierarchy, together with class define Ruby class that reads Couchbase data from REST.\r\n\r\n* `:function:` - name of reduce type function (Array class method) for array pre-processing (for example, :sum or :avg) Function can be any Array method, producing single value. See ./lib/array.rb for the implemented ones.\r\n\r\n* `:operator:` - comparison operator for eavluating RAG checks (for example `ep_tap_replica_queue_backfillremaining > 20`). Operator is Numeric method name, syntax is: `':>'`, `':=='`, `':!='`, etc. This can be any operator or method returning boolean.\r\n\r\n* `:rag:` - three element array of values to compare to [Red, Amber,\r\n    Green], order is important.\r\n\r\n### Example\r\n\r\n````yaml\r\n\r\ndefault: &default\r\n  :namespace: Wizcorp::Couchbase\r\n  :class: BucketStats\r\n  :function: :none \r\n  :operator: :>\r\n  :rag: [0,0,0]  # order Red, Amber, Green\r\n\r\n:ep_tap_replica_queue_backfillremaining:\r\n   <<: *default\r\n   :function: :sum\r\n   :rag:  [-20, 10, -1]\r\n   \r\n```\r\n\r\n"}